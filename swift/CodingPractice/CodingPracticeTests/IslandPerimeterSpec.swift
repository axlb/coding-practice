//  Copyright Â© 2017 lagostout. All rights reserved.

import Foundation
import Quick
import Nimble

class IslandPerimeterSpec : QuickSpec {
    override func spec() {
        it("computes the perimeter") {
            // Uncommenting some of these cases causes Xcode to build forever.  Not sure why.
            let cases = [
//                [[[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0],
//                  [0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,0,0,0,0],
//                  [0,0,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0],
//                  [0,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0],
//                  [0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0],
//                  [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0],
//                  [0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
//                  [0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],
//                  [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],
//                  [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
//                  [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],
//                  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],
//                  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
//                  [1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
//                  [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0],
//                  [0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],
//                  [0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
//                  [0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0],
//                  [0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,0,1,0,0,0],
//                  [0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0]], 130],
//                [[[0,0,0,0],
//                  [0,0,0,1],
//                  [0,1,1,1],
//                  [1,1,1,1]], 14],
                [[[1,1],[1,1]], 8],
                [[[1,1]], 6],
                [[[1]], 4],
                [[[0,1]], 4],
                [[[1,0]], 4],
                [[[1,1]], 6],
//                [[[0,1,0,0],
//                  [1,1,1,0],
//                  [0,1,0,0],
//                  [1,1,0,0]], 16]
            ]
            for aCase in cases {
                let perimeter = IslandPerimeter.Solution()
                    .islandPerimeter(aCase[0] as! [[Int]])
                expect(perimeter).to(equal(aCase[1] as? Int))
            }
        }
    }
}
